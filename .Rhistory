left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe)
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id")
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))
# summary stats of alpha and qod, as a function of group
# to include all stats, I must bind in the 0 probability demand indices df
#this is filtered; should include all responses
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarise(n = n(),
mn_q0d = mean(Q0d),
md_q0d = median(Q0d),
sd_q0d = sd(Q0d),
iqr_q0d = IQR(Q0d),
mn_alpha = mean(Alpha, na.rm = TRUE),
md_alpha = median(Alpha, na.rm = TRUE),
sd_alpha = sd(Alpha, na.rm = TRUE),
iqr_alpha = IQR(Alpha, na.rm = TRUE),
mn_bp1 = mean(BP1),
md_bp1 = median(BP1),
sd_bp1 = sd(BP1),
iqr_bp1 = IQR(BP1),
mn_pmax = mean(Pmaxe),
md_pmax = median(Pmaxe),
sd_pmax = sd(Pmaxe),
iqr_pmax = IQR(Pmaxe)) |>
t() |>
as.data.frame() |>
rownames_to_column() |>
rempsyc::nice_table() |>   # code to turn this into a nice table
# flextable::save_as_docx(
# path = "plots/demand-indices-summary-table-spare.docx")
#peek at distributions of Q0d and alpha, including log and sqrt transformations
# ltept_fits$dfres |>
#   mutate(alpha_log = log(Alpha),
#          alpha_sqrt = sqrt(Alpha),
#          q0d_log = log(Q0d),
#          q0d_sqrt = sqrt(Q0d)) |>
#   ggplot(aes(x = Alpha)) +
#   geom_histogram()
#count number of observations in each index by group
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group)
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
# summary stats of alpha and qod, as a function of group
# to include all stats, I must bind in the 0 probability demand indices df
#this is filtered; should include all responses
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarise(n = n(),
mn_q0d = mean(Q0d),
md_q0d = median(Q0d),
sd_q0d = sd(Q0d),
iqr_q0d = IQR(Q0d),
mn_alpha = mean(Alpha, na.rm = TRUE),
md_alpha = median(Alpha, na.rm = TRUE),
sd_alpha = sd(Alpha, na.rm = TRUE),
iqr_alpha = IQR(Alpha, na.rm = TRUE),
mn_bp1 = mean(BP1),
md_bp1 = median(BP1),
sd_bp1 = sd(BP1),
iqr_bp1 = IQR(BP1),
mn_pmax = mean(Pmaxe),
md_pmax = median(Pmaxe),
sd_pmax = sd(Pmaxe),
iqr_pmax = IQR(Pmaxe)) |>
t() |>
as.data.frame() |>
rownames_to_column() |>
rempsyc::nice_table() |>   # code to turn this into a nice table
# flextable::save_as_docx(
# path = "plots/demand-indices-summary-table-spare.docx")
#peek at distributions of Q0d and alpha, including log and sqrt transformations
# ltept_fits$dfres |>
#   mutate(alpha_log = log(Alpha),
#          alpha_sqrt = sqrt(Alpha),
#          q0d_log = log(Q0d),
#          q0d_sqrt = sqrt(Q0d)) |>
#   ggplot(aes(x = Alpha)) +
#   geom_histogram()
#count number of observations in each index by group
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
# summary stats of alpha and qod, as a function of group
# to include all stats, I must bind in the 0 probability demand indices df
#this is filtered; should include all responses
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarise(n = n(),
mn_q0d = mean(Q0d),
md_q0d = median(Q0d),
sd_q0d = sd(Q0d),
iqr_q0d = IQR(Q0d),
mn_alpha = mean(Alpha, na.rm = TRUE),
md_alpha = median(Alpha, na.rm = TRUE),
sd_alpha = sd(Alpha, na.rm = TRUE),
iqr_alpha = IQR(Alpha, na.rm = TRUE),
mn_bp1 = mean(BP1),
md_bp1 = median(BP1),
sd_bp1 = sd(BP1),
iqr_bp1 = IQR(BP1),
mn_pmax = mean(Pmaxe),
md_pmax = median(Pmaxe),
sd_pmax = sd(Pmaxe),
iqr_pmax = IQR(Pmaxe)) |>
t() |>
as.data.frame() |>
rownames_to_column() |>
rempsyc::nice_table() |>   # code to turn this into a nice table
# flextable::save_as_docx(
# path = "plots/demand-indices-summary-table-spare.docx")
#peek at distributions of Q0d and alpha, including log and sqrt transformations
# ltept_fits$dfres |>
#   mutate(alpha_log = log(Alpha),
#          alpha_sqrt = sqrt(Alpha),
#          q0d_log = log(Q0d),
#          q0d_sqrt = sqrt(Q0d)) |>
#   ggplot(aes(x = Alpha)) +
#   geom_histogram()
#count number of observations in each index by group
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
# summary stats of alpha and qod, as a function of group
# to include all stats, I must bind in the 0 probability demand indices df
#this is filtered; should include all responses
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarise(n = n(),
mn_q0d = mean(Q0d),
md_q0d = median(Q0d),
sd_q0d = sd(Q0d),
iqr_q0d = IQR(Q0d),
mn_alpha = mean(Alpha, na.rm = TRUE),
md_alpha = median(Alpha, na.rm = TRUE),
sd_alpha = sd(Alpha, na.rm = TRUE),
iqr_alpha = IQR(Alpha, na.rm = TRUE),
mn_bp1 = mean(BP1),
md_bp1 = median(BP1),
sd_bp1 = sd(BP1),
iqr_bp1 = IQR(BP1),
mn_pmax = mean(Pmaxe),
md_pmax = median(Pmaxe),
sd_pmax = sd(Pmaxe),
iqr_pmax = IQR(Pmaxe)) |>
t() |>
as.data.frame() |>
rownames_to_column() |>
rempsyc::nice_table() |>   # code to turn this into a nice table
# flextable::save_as_docx(
# path = "plots/demand-indices-summary-table-spare.docx")
#peek at distributions of Q0d and alpha, including log and sqrt transformations
# ltept_fits$dfres |>
#   mutate(alpha_log = log(Alpha),
#          alpha_sqrt = sqrt(Alpha),
#          q0d_log = log(Q0d),
#          q0d_sqrt = sqrt(Q0d)) |>
#   ggplot(aes(x = Alpha)) +
#   geom_histogram()
#count number of observations in each index by group
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) %>%
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) %>%
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
q0d_aov
q0d_aov_sens
alpha_aov
alpha_aov_sens
#examine association between contemplation ladder scores and indices by group
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = demo_data |>
select(id, group, cont_ladder) |>
mutate(id = as.double(id)), by = "id") |>
ggplot(aes(x = cont_ladder, y = BP1, group = group, color = group)) +
geom_point() +
geom_smooth(method = "lm")
#examine association between contemplation ladder scores and indices by group
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = demo_data |>
select(id, group, cont_ladder) |>
mutate(id = as.double(id)), by = "id") |>
ggplot(aes(x = cont_ladder, y = Pmaxe, group = group, color = group)) +
geom_point() +
geom_smooth(method = "lm")
#examine association between contemplation ladder scores and indices by group
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = demo_data |>
select(id, group, cont_ladder) |>
mutate(id = as.double(id)), by = "id") |>
ggplot(aes(x = cont_ladder, y = Q0d, group = group, color = group)) +
geom_point() +
geom_smooth(method = "lm")
demand_df
data$ex_val_sum
#we must now bind the zero responses to the main ltept df, to include them in
#subsequent 2 stage analyses. include all responses.
demand_df <- bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group, condition, order) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, condition, order, cont_ladder, ex_val_sum,
Q0d, Alpha, BP1, Pmaxe, R2, Notes),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group, condition, order),
by = "id")) |>
mutate(log_alpha = log(Alpha))
#we must now bind the zero responses to the main ltept df, to include them in
#subsequent 2 stage analyses. include all responses.
demand_df <- bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group, condition, order, cont_ladder, ex_val_sum) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, condition, order, Q0d, Alpha, BP1, Pmaxe, R2, Notes),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group, condition, order),
by = "id")) |>
mutate(log_alpha = log(Alpha))
demand_df
str(demand_df)
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group, condition, order, cont_ladder, ex_val_sum) |>
mutate(id = as.double(id)), by = "id")
#we must now bind the zero responses to the main ltept df, to include them in
#subsequent 2 stage analyses. include all responses.
demand_df <- bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group, condition, order, cont_ladder, ex_val_sum) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, condition, order, Q0d, Alpha, BP1, Pmaxe, R2, Notes,
cont_ladder, ex_val_sum),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group, condition, order),
by = "id")) |>
mutate(log_alpha = log(Alpha))
colnames(demand_df)
demand_df |>
aov(log_alpha ~ group + condition + order + cont_ladder, data = _) |>
car::Anova(mod = _, type = 3)
demand_df |>
aov(log_alpha ~ group + condition + order + cont_ladder + ex_val_sum, data = _) |>
car::Anova(mod = _, type = 3)
demand_df |>
aov(log_alpha ~ group + condition + order + ex_val_sum, data = _) |>
car::Anova(mod = _, type = 3)
demand_df |>
aov(Q0d ~ group + condition + order +cont_ladder, data = _) |>
car::Anova(mod = _, type = 3)
# summary stats of alpha and qod, as a function of group
# to include all stats, I must bind in the 0 probability demand indices df
#this is filtered; should include all responses
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group) |>
summarise(n = n(),
mn_q0d = mean(Q0d),
md_q0d = median(Q0d),
sd_q0d = sd(Q0d),
iqr_q0d = IQR(Q0d),
mn_alpha = mean(Alpha, na.rm = TRUE),
md_alpha = median(Alpha, na.rm = TRUE),
sd_alpha = sd(Alpha, na.rm = TRUE),
iqr_alpha = IQR(Alpha, na.rm = TRUE),
mn_bp1 = mean(BP1),
md_bp1 = median(BP1),
sd_bp1 = sd(BP1),
iqr_bp1 = IQR(BP1),
mn_pmax = mean(Pmaxe),
md_pmax = median(Pmaxe),
sd_pmax = sd(Pmaxe),
iqr_pmax = IQR(Pmaxe)) |>
t() |>
as.data.frame() |>
rownames_to_column() |>
rempsyc::nice_table() |>   # code to turn this into a nice table
# flextable::save_as_docx(
# path = "plots/demand-indices-summary-table-spare.docx")
#peek at distributions of Q0d and alpha, including log and sqrt transformations
# ltept_fits$dfres |>
#   mutate(alpha_log = log(Alpha),
#          alpha_sqrt = sqrt(Alpha),
#          q0d_log = log(Q0d),
#          q0d_sqrt = sqrt(Q0d)) |>
#   ggplot(aes(x = Alpha)) +
#   geom_histogram()
#count number of observations in each index by group
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group)  |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
bind_rows(
ltept_fits$dfres |>
mutate(id = as.numeric(id)) |>
left_join(x = _, y = data |>
select(id, group) |>
mutate(id = as.double(id)), by = "id") |>
select(id, group, Q0d, Alpha, BP1, Pmaxe),
ltept_zero_fits |>
left_join(data |>
filter(id %in% ltept_zero_ids) |>
select(id, group),
by = "id"))  |>
group_by(group)  |>
summarize(across(everything(), ~ sum(!is.na(.), na.rm = TRUE)))
